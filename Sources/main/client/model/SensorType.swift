//
// SensorType.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public enum SensorType: String, Codable {
    case radonshorttermavg = "radonShortTermAvg"
    case radonlongtermavg = "radonLongTermAvg"
    case temp = "temp"
    case outdoortemp = "outdoorTemp"
    case humidity = "humidity"
    case outdoorhumidity = "outdoorHumidity"
    case co2 = "co2"
    case voc = "voc"
    case pressure = "pressure"
    case outdoorpressure = "outdoorPressure"
    case pressuredifference = "pressureDifference"
    case pressurediffstddev = "pressureDiffStdDev"
    case pressurediffmin = "pressureDiffMin"
    case pressurediffmax = "pressureDiffMax"
    case light = "light"
    case batterypercentage = "batteryPercentage"
    case batteryvoltage = "batteryVoltage"
    case orientation = "orientation"
    case pm1 = "pm1"
    case outdoorpm1 = "outdoorPm1"
    case pm25 = "pm25"
    case outdoorpm25 = "outdoorPm25"
    case pm10 = "pm10"
    case outdoorpm10 = "outdoorPm10"
    case mold = "mold"
    case staleair = "staleAir"
    case transmissionefficiency = "transmissionEfficiency"
    case virussurvivalrate = "virusSurvivalRate"
    case virusrisk = "virusRisk"
    case windspeed = "windSpeed"
    case winddirection = "windDirection"
    case windgust = "windGust"
    case dewpoint = "dewPoint"
    case cloudcover = "cloudCover"
    case visibility = "visibility"
    case precipitationProbability = "precipitation_probability"
    case totalPrecipitation = "total_precipitation"
    case outdoorweather = "outdoorWeather"
    case hourlyradonstandarddeviation = "hourlyRadonStandardDeviation"
    case hourlyradon = "hourlyRadon"
    case energywastage = "energyWastage"
    case energyscenarios = "energyScenarios"
    case historicventilationconfidence = "historicVentilationConfidence"
    case daytimebaseline = "daytimeBaseline"
    case daytimepeak = "daytimePeak"
    case nightbaseline = "nightBaseline"
    case historicventilation = "historicVentilation"
    case ventilationrunningconfidence = "ventilationRunningConfidence"
    case occupantsupper = "occupantsUpper"
    case occupantslower = "occupantsLower"
    case occupants = "occupants"
    case relativeoccupants = "relativeOccupants"
    case ventilationamount = "ventilationAmount"
    case historicventilationrunning = "historicVentilationRunning"
    case ventilationrunning = "ventilationRunning"
    case relativeventilationrate = "relativeVentilationRate"
    case aggregated = "aggregated"
    case sla = "sla"
    case pressureatminheight = "pressureAtMinHeight"
    case pressureatmaxheight = "pressureAtMaxHeight"
    case regulationpressure = "regulationPressure"
    case regulationheight = "regulationHeight"
    case zeropressureheight = "zeroPressureHeight"
    case totalpowerlost = "totalPowerLost"
    case moistguard = "moistGuard"
    case potentialpowersaved = "potentialPowerSaved"
    case potentialpowersavedpercent = "potentialPowerSavedPercent"
    case zeroheightpercent = "zeroHeightPercent"
    case zone = "zone"
    case controlsignal = "controlSignal"
    case controlstatus = "controlStatus"
    case returnstate = "returnState"
    case appliedgain = "appliedGain"
    case lastbestcontrolsignal = "lastBestControlSignal"
    case lastbestsignalerror = "lastBestSignalError"
    case lastbestcontrolsignalgain = "lastBestControlSignalGain"
    case lastbestcontrolsignalrecorded = "lastBestControlSignalRecorded"
    case messages = "messages"
    case balancecontrol = "balanceControl"
    case controlsignalslot01 = "controlSignalSlot01"
    case controlsignalslot02 = "controlSignalSlot02"
    case controlsignalslot03 = "controlSignalSlot03"
    case controlsignalslot04 = "controlSignalSlot04"
    case controlsignalslot05 = "controlSignalSlot05"
    case controlsignalslot06 = "controlSignalSlot06"
    case controlsignalslot07 = "controlSignalSlot07"
    case controlsignalslot08 = "controlSignalSlot08"
    case inletaircontrol = "inletAirControl"
    case powervoltage = "powerVoltage"
    case rsrp = "rsrp"
    case ventcontroller = "ventController"
    case subsamplescount = "subsamplesCount"
    case subsamples = "subsamples"
    case balanceinfo = "balanceInfo"
    case outdoorno2 = "outdoorNo2"
    case outdooro3 = "outdoorO3"
    case outdoorso2 = "outdoorSo2"
    case outdoorco = "outdoorCo"
    case outdoorno = "outdoorNo"
    case airly = "airly"
    case airlyno2 = "airlyNo2"
    case airlyco = "airlyCo"
    case airlyno = "airlyNo"
    case bacnet = "bacnet"
}